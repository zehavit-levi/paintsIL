{"version":3,"sources":["shared/ActiveUserContext.jsx","components/ImgCard/ImgCard.jsx","components/BuyerNavBar/BuyerNavBar.jsx","pages/HomePage/HomePage.jsx","pages/SignUpPage/SignUpPage.jsx","models/ColorType.js","models/CreationModel.js","models/UserModel.js","pages/LoginPage/LoginPage.jsx","pages/ShowCreatorDetailsPage/ShowCreatorDetailsPage.jsx","components/MyButton/MyButton.jsx","pages/WellcomePage/WellcomePage.jsx","pages/CreatorManagePage/CreatorManagePage.jsx","pages/BuyerSavedPaintsPage/BuyerSavedPaintsPage.jsx","components/ColorTypesView/ColorTypesView.jsx","pages/CreationDetailsPage/CreationDetailsPage.jsx","pages/CreatorNewPaintPage/CreatorNewPaintPage.jsx","pages/CreatorDetailsPage/CreatorDetailsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","ImgCard","paint","index","useState","redirectTo","setRedirectTo","undefined","to","Card","className","onClick","Image","src","img","BuyerNavBar","props","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","page","Form","Row","Control","value","filterText","onChange","e","setFilterText","target","placeholder","filterBy","as","setFilterBy","HomePage","filterdPaints","setFilterdPaint","paints","setPaints","activeUser","useContext","useEffect","a","getPaints","paintsToSet","fetchData","getFilterdPaints","paintsShowCreator","map","style","width","Img","variant","paintsShowBuyer","Container","isCreator","columnsCountBreakPoints","350","750","900","SignUpPage","ColorType","parseColor","this","get","url","name","CreationModel","result","date","Date","JSON","stringify","createdAt","split","replace","getDate","getMonth","getFullYear","additionalImg1","additionalImg2","price","creationDate","height","density","story","colorsTypes","creatorId","saved","watched","Paint","Parse","Object","extend","Query","then","object","set","save","response","console","log","error","User","query","equalTo","find","parseUsers","creators","parseUser","UserModel","colorType","containedIn","values","parseColorsTypes","types","type","parsePaints","parsePaint","fName","lName","email","phone","colorTypes","trends","privateOrders","userName","site","occupation","savedPaints","watchedPaints","parseUserIds","paintsTmp","length","parsePaintRandom","i","parseRandom","Math","random","includes","push","paintId","concat","tmp","filter","contains","pwd","logIn","LoginPage","onLogin","setEmail","setPwd","showInvalidLogin","setShowInvalidLogin","preventDefault","login","Alert","onSubmit","Group","controlId","Label","Button","block","ShowCreatorDetailsPage","MyButton","text","WellcomePage","signup","setIsCreator","CreatorManagePage","BuyerSavedPaintsPage","paintsToShow","setPaintsToShow","getSavedPaints","PaintsToShow","ColorTypesView","items","Carousel","Item","alt","Caption","position","fade","prevLabel","nextLabel","CreationDetailsPage","useParams","setPaint","creator","setCreator","setColorTypes","show","setShow","buttonState","setButtonState","getPaint","p","setWatched","setWatchedPaints","getCreator","getColorsTypes","colors","saveOrRemove","setSaved","setSavedPaints","removeSaved","removeSavedPaint","Col","md","size","Modal","scrollable","onHide","aria-labelledby","Header","closeButton","closeLabel","Body","CreatorNewPaintPage","CreatorDetailsPage","App","setActiveUser","Provider","exact","path","component","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04603c8b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React, { useState } from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction ImgCard({paint,index}) {\r\n    const [redirectTo, setRedirectTo] = useState();\r\n    if (redirectTo !== undefined) {\r\n        return <Redirect to={'/creation/' + redirectTo}/>\r\n    }\r\n    return (\r\n        <Card className=\"img-card\" \r\n            onClick={() => setRedirectTo(index)}>\r\n            <Image src={paint.img} ></Image>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ImgCard;","import React from 'react';\r\nimport { Form, Nav, Navbar, Row } from 'react-bootstrap';\r\nimport './BuyerNavBar.css'\r\n\r\nfunction BuyerNavBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <Navbar className=\"buyer-navbar\"  expand=\"lg\">\r\n            <Navbar.Brand className=\"eng\" href=\"#home\">PaintsIL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto col-lg-6\">\r\n                    <Nav.Link className=\"home\" href=\"#home\">עמוד הבית</Nav.Link>\r\n                    <Nav.Link className=\"saved\" href=\"#saved\">התמונות ששמרתי</Nav.Link>\r\n                </Nav>\r\n                {props.page === \"home\" ?\r\n                <Form className=\"form-filter col-lg-6\">\r\n                    <Row>\r\n                        <div className=\"filter-container col-md-6 col-12\">\r\n                            <Form.Control value={props.filterText} onChange={(e) => {\r\n                                props.setFilterText(e.target.value);\r\n                            }} placeholder=\"מה לחפש?\"></Form.Control>\r\n                        </div>\r\n                        <div className=\"select-container col-md-6 col-12\">\r\n                            <Form.Control value={props.filterBy} as=\"select\" onChange={(e) => props.setFilterBy(e.target.value)}>\r\n                                <option value=\"userName\">שם האומן</option>\r\n                                <option value=\"creationName\">שם היצירה</option>\r\n                            </Form.Control>\r\n                        </div>\r\n                    </Row>\r\n                </Form> : null}\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default BuyerNavBar;","import React, { useContext, useEffect, useState } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Card, Container } from 'react-bootstrap';\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport ImgCard from '../../components/ImgCard/ImgCard';\r\nimport BuyerNavBar from '../../components/BuyerNavBar/BuyerNavBar';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n    const [filterText, setFilterText] = useState();\r\n    const [filterBy, setFilterBy] = useState(\"userName\");\r\n    const [filterdPaints, setFilterdPaint] = useState();\r\n    const [paints, setPaints] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const paintsToSet = await activeUser.getPaints();\r\n            setPaints(paintsToSet);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [activeUser])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const paintsToSet = await activeUser.getFilterdPaints(filterText, filterBy);\r\n            setFilterdPaint(paintsToSet);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [filterText, filterBy, activeUser])\r\n\r\n\r\n    const paintsShowCreator = paints ? paints.map(paint => {\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={paint.img} />\r\n            </Card>\r\n        )\r\n    }) : null;\r\n\r\n\r\n    const paintsShowBuyer = paints && !filterText ? paints.map((paint, index) => <ImgCard className=\"img-card\" key={index} paint={paint} index={paint.id} />) :\r\n        paints && filterdPaints ? filterdPaints.map((paint, index) => <ImgCard className=\"img-card\" key={index} paint={paint} index={paint.id} />) : null;\r\n\r\n\r\n    return (\r\n\r\n        <Container className=\"p-homepage\">\r\n            {activeUser && activeUser.isCreator && paints ?\r\n\r\n                <ResponsiveMasonry\r\n                    columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                    <Masonry>\r\n                        {paintsShowCreator}\r\n                    </Masonry>\r\n                </ResponsiveMasonry>\r\n\r\n                : paints ?\r\n                    <Container>\r\n                        <BuyerNavBar filterText={filterText} setFilterText={setFilterText} filterBy={filterBy} setFilterBy={setFilterBy} page=\"home\"/>\r\n                        <ResponsiveMasonry\r\n                            columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                            <Masonry>\r\n                                {paintsShowBuyer}\r\n                            </Masonry>\r\n                        </ResponsiveMasonry>\r\n                    </Container> : null\r\n\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction SignUpPage(props) {\r\n    return (\r\n        <div>\r\n           <h1>In SignUpPage</h1> \r\n           {\r\n               props.isCreator === true ? <h2>is creator</h2> : <h2>is buyer</h2>\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage;","export default class ColorType{\r\n    constructor(parseColor){\r\n        this.id = parseColor.id;\r\n        this.img = parseColor.get(\"img\").url();;\r\n        this.name = parseColor.get(\"name\");\r\n    }\r\n}","import Parse from 'parse';\r\nimport ColorType from './ColorType';\r\nimport UserModel from './UserModel';\r\nexport default class CreationModel {\r\n    constructor(result) {\r\n        this.id = result.id;\r\n        const date = new Date(JSON.stringify(result.createdAt).split('T')[0].replace('\"',\"\"));\r\n        this.createdAt = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n        this.name = result.get(\"name\");\r\n        this.img = result.get(\"img\").url();\r\n        if (result.get(\"additionatImg1\")) this.additionalImg1 = result.get(\"additionatImg1\").url();\r\n        if (result.get(\"additionatImg2\")) this.additionalImg2 = result.get(\"additionatImg2\").url();\r\n        this.price = result.get(\"price\");\r\n        if (result.get(\"creationDate\") !== undefined) this.creationDate = result.get(\"creationDate\");\r\n        this.width = result.get(\"width\");\r\n        this.height = result.get(\"height\");\r\n        if (result.get(\"density\") !== undefined) this.density = result.get(\"density\");\r\n        if (result.get(\"story\") !== undefined) this.story = result.get(\"story\");\r\n        this.colorsTypes = result.get(\"colorsTypes\");\r\n        this.creatorId = result.get(\"creatorId\");\r\n        this.saved = result.get(\"saved\");\r\n        this.watched = result.get(\"watched\");\r\n    }\r\n\r\n    async setSaved() {\r\n        this.saved = this.saved + 1;\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.get(this.id).then((object) => {\r\n            object.set('saved', this.saved);\r\n            object.save().then((response) => {\r\n                console.log('Updated ', response);\r\n            }, (error) => {\r\n                console.error('Error while updating ', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    async setWatched() {\r\n        this.watched = this.watched + 1;\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.get(this.id).then((object) => {\r\n            object.set('watched', this.watched);\r\n            object.save().then((response) => {\r\n                console.log('Updated ', response);\r\n            }, (error) => {\r\n                console.error('Error while updating ', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    async removeSaved(){\r\n        this.saved = this.saved - 1;\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.get(this.id).then((object) => {\r\n            object.set('saved', this.saved);\r\n            object.save().then((response) => {\r\n                console.log('Updated ', response);\r\n            }, (error) => {\r\n                console.error('Error while updating ', error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    static async getPaint(index){\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.equalTo(\"objectId\", index);\r\n        const parsePaints = await query.find();\r\n        const paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n        return paints[0];\r\n    }\r\n    async getCreator(){\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.equalTo(\"objectId\", this.creatorId);\r\n        const parseUsers = await query.find();\r\n        const creators = parseUsers.map(parseUser =>  new UserModel(parseUser));\r\n        console.log(creators[0]);\r\n        return creators[0];\r\n    }\r\n\r\n    async getColorsTypes(){\r\n        const colorType = Parse.Object.extend('colorType');\r\n        const query = new Parse.Query(colorType);\r\n        console.log(this.colorsTypes);\r\n        query.containedIn(\"objectId\",Object.values(this.colorsTypes));\r\n        const parseColorsTypes = await query.find();\r\n        const types = parseColorsTypes.map(type => new ColorType(type));\r\n        return types;\r\n    }\r\n\r\n}","import Parse from 'parse';\r\nimport CreationModel from './CreationModel';\r\nexport default class UserModel {\r\n    #parseUser\r\n    constructor(parseUser) {\r\n        this.id = parseUser.id;\r\n        this.fName = parseUser.get(\"fName\");\r\n        this.lName = parseUser.get(\"lName\");\r\n        this.email = parseUser.get(\"email2\");\r\n        this.phone = parseUser.get(\"phone\");\r\n        this.colorTypes = parseUser.get(\"colorsTypes\");\r\n        this.trends = parseUser.get(\"trends\");\r\n        this.privateOrders = parseUser.get(\"privateOrders\");\r\n        this.userName = parseUser.get(\"userName\");\r\n        this.site = parseUser.get(\"site\");\r\n        this.story = parseUser.get(\"story\");\r\n        this.occupation = parseUser.get(\"occupation\");\r\n        this.isCreator = parseUser.get(\"isCreator\");\r\n        this.savedPaints = parseUser.get(\"savedPaints\");\r\n        this.watchedPaints = parseUser.get(\"watchedPaints\");\r\n\r\n    }\r\n\r\n    static activeUser = null;\r\n    static paints = [];\r\n\r\n    static async login(email, pwd) {\r\n        const parseUser = await Parse.User.logIn(email, pwd);\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n        return UserModel.activeUser;\r\n    }\r\n\r\n    async getPaints(parseUserIds) {\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        console.log(parseUserIds);\r\n        if(parseUserIds){\r\n            let paintsTmp =[];\r\n            if(parseUserIds !== undefined){\r\n            query.containedIn(\"creatorId\",parseUserIds);\r\n            const parsePaints = await query.find();\r\n            paintsTmp = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n            }\r\n            return paintsTmp;\r\n        }\r\n        \r\n        if (this.isCreator) {\r\n            query.equalTo(\"creatorId\", this.id);\r\n            const parsePaints = await query.find();\r\n            this.paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n            return this.paints;\r\n        }\r\n        const parsePaints = await query.find();\r\n        console.log(parsePaints.length);\r\n        \r\n            const parsePaintRandom = [];\r\n            for(let i=0;(parsePaints.length >= 10 && i<10) || i<4;i++){\r\n                const parseRandom = parsePaints[parsePaints.length * Math.random() | 0];\r\n                parsePaintRandom === [] || !parsePaintRandom.includes(parseRandom)  ? parsePaintRandom.push(parseRandom) : i--;\r\n            }\r\n            this.paints = parsePaintRandom.map(parsePaint => new CreationModel(parsePaint));\r\n            return this.paints;\r\n    }\r\n\r\n    async getSavedPaints() {\r\n        console.log(UserModel.activeUser);\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.containedIn(\"objectId\", this.savedPaints)\r\n        const parsePaints = await query.find();\r\n        const savedPaints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n\r\n        return savedPaints;\r\n    }\r\n\r\n    async setSavedPaints(paintId){\r\n        this.savedPaints = this.savedPaints.concat(paintId);\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.get(this.id).then((object) => {\r\n            object.set('savedPaints',Object.values(this.savedPaints) );\r\n            object.save().then((response) => {\r\n              console.log('Updated ', response);\r\n            }, (error) => {\r\n              console.error('Error while updating ', error);\r\n            });\r\n          });\r\n    }\r\n    async removeSavedPaint(paintId){\r\n        const tmp = Object.values(this.savedPaints).filter(paint => paint !== paintId);\r\n        this.savedPaints = tmp;\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.get(this.id).then((object) => {\r\n            object.set('savedPaints',Object.values(this.savedPaints) );\r\n            object.save().then((response) => {\r\n              console.log('Updated ', response);\r\n            }, (error) => {\r\n              console.error('Error while updating ', error);\r\n            });\r\n          });\r\n    }\r\n    async setWatchedPaints(paintId){\r\n        this.watchedPaints = this.watchedPaints.concat(paintId);\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.get(this.id).then((object) => {\r\n            object.set('watchedPaints',Object.values(this.watchedPaints)); \r\n            object.save().then((response) => {\r\n              console.log('Updated ', response);\r\n            }, (error) => {\r\n              console.error('Error while updating ', error);\r\n            });\r\n          });\r\n    }\r\n    async getFilterdPaints(filterText,filterBy){\r\n        console.log(\"filterText:\", filterText, \"filterBy\", filterBy);\r\n        if(filterBy === \"creationName\"){\r\n            const Paint = Parse.Object.extend('Paint');\r\n            const query = new Parse.Query(Paint);\r\n            query.contains(\"name\", filterText);\r\n            const parsePaints = await query.find();\r\n            this.paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n            return this.paints;\r\n        }\r\n        else if(filterBy === \"userName\" && filterText){\r\n            const User = Parse.Object.extend('User');\r\n            const query = new Parse.Query(User);\r\n            query.contains(\"userName\", filterText);\r\n            const parseUsers = await query.find();\r\n            const parseUserIds = parseUsers.map(parseUser => parseUser.id);\r\n            this.paints = this.getPaints(parseUserIds);\r\n            return this.paints;\r\n        }\r\n        return UserModel.paints;\r\n    }\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport UserModel from '../../models/UserModel';\r\nimport './LoginPage.css';\r\n\r\n\r\nfunction LoginPage({ onLogin}) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        // Pass the username and password to logIn function\r\n        // UserModel.login(email,pwd);\r\n        try {\r\n            const activeUser = await UserModel.login(email, pwd);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n    return (\r\n        <Container  className=\"bg-p-login\">\r\n            <div className=\"p-login col-md-10 col-lg-6\">\r\n                <h1 className=\"p-login-title\">כניסה לאתר</h1>\r\n                <p className=\"p-login-title\">או <Link to=\"/\">הרשמה לאתר</Link></p>\r\n                {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                <Form className=\"form-login\" onSubmit={login}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className=\"eng\">Email</Form.Label>\r\n                        <Form.Control className=\"eng\" type=\"email\" placeholder=\"Email\"\r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמה\"\r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button className=\"submit-btn-login\" type=\"submit\" block>\r\n                    כניסה\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nfunction ShowCreatorDetailsPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In ShowCreatorDetailsPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowCreatorDetailsPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MyButton.css';\r\n\r\nfunction MyButton(props) {\r\n    return (\r\n        <Link to={props.href}>\r\n        <button className=\"my-button\" onClick={() => props.onClick? props.onClick(props.isCreator):null}>\r\n            <span>{props.text}</span>\r\n        </button>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MyButton;","\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport MyButton from '../../components/MyButton/MyButton';\r\nimport './WellcomePage.css';\r\n\r\nfunction WellcomePage(props) {\r\n    const signup = (isCreator => props.setIsCreator(isCreator));\r\n    return (\r\n\r\n        <Container className=\"p-wellcome\">\r\n            <div className=\"p-text-content\">\r\n                <MyButton href=\"/login\" text=\"כניסה\" />\r\n                <p>ברוכים הבאים לאתר</p>\r\n                <p className=\"paint-il\">PaintsIL</p>\r\n                <p>האתר הישראלי לרכישת אומנות ישירות מהאומן, ללא דמי תיווך! </p>\r\n                <p>בצורה נעימה וללא שטיקים</p>\r\n                <p>*השירות באתר ניתן לרשומים בלבד</p>\r\n                <p className=\"to-signup\">להרשמה עליך לבחור</p>\r\n                <div className=\"signup-buttons\">\r\n                    <MyButton href=\"/signup\" onClick={signup} isCreator={true} text=\"אומן\" />\r\n                    <MyButton href=\"/signup\" onClick={signup} isCreator={false} text=\"קונה\" />\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WellcomePage;","import React from 'react';\r\n\r\nfunction CreatorManagePage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorManagePage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorManagePage;","import React, { useContext, useEffect, useState } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Container } from 'react-bootstrap';\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport ImgCard from '../../components/ImgCard/ImgCard';\r\nimport BuyerNavBar from '../../components/BuyerNavBar/BuyerNavBar';\r\nimport './BuyerSavedPaintsPage.css';\r\nfunction BuyerSavedPaintsPage(props) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [paintsToShow, setPaintsToShow] = useState();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const PaintsToShow = await activeUser.getSavedPaints();\r\n            setPaintsToShow(PaintsToShow);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [])\r\n   \r\n    return (\r\n        <Container className=\"p-buyer-saved-paints\">\r\n            <BuyerNavBar />\r\n            <ResponsiveMasonry\r\n                columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                <Masonry>\r\n                    {paintsToShow? paintsToShow.map((paint, index) => <ImgCard key={index} paint={paint} index={paint.id} />) : null}\r\n                </Masonry>\r\n            </ResponsiveMasonry>\r\n        </Container>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BuyerSavedPaintsPage;","import { Carousel, Container } from 'react-bootstrap';\r\nimport './ColorTypesView.css';\r\n\r\nfunction ColorTypesView(props) {\r\n\r\n    const items = props.types.map((colorType, index) => {\r\n        return (\r\n            <Carousel.Item key={index}>\r\n                <img className=\"carouselImg\"\r\n                    src={colorType.img}\r\n                    alt=\"First slide\"\r\n\r\n                />\r\n                <Carousel.Caption style={{ position: \"relative\" }}>\r\n                    <h4>{colorType.name}</h4>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n        )\r\n    })\r\n    return (\r\n        <Container className=\"carouselContainer\">\r\n            {props.types.length > 1 ?\r\n                <Carousel fade prevLabel={null} nextLabel={null}>\r\n                    {items ? items : null}\r\n                </Carousel>\r\n                :\r\n                <>\r\n                    <img className=\"carouselImg\"\r\n                        src={props.types[0].img}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <h4>{props.types[0].name}</h4>\r\n                </>}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ColorTypesView;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Carousel, Col, Container, Image, Modal, Row } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport BuyerNavBar from '../../components/BuyerNavBar/BuyerNavBar';\r\nimport ColorTypesView from '../../components/ColorTypesView/ColorTypesView';\r\nimport CreationModel from '../../models/CreationModel';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './CreationDetailsPage.css';\r\n\r\nfunction CreationDetailsPage(props) {\r\n    const { index } = useParams();\r\n    const [paint, setPaint] = useState();\r\n    const [creator, setCreator] = useState();\r\n    const [colorsTypes, setColorTypes] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [buttonState, setButtonState] = useState();\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const p = await CreationModel.getPaint(index);\r\n            p.setWatched();\r\n            if (!activeUser.watchedPaints.includes(p.id)) activeUser.setWatchedPaints(p.id);\r\n            activeUser.savedPaints.includes(p.id) ? setButtonState(\"הסר\") : setButtonState(\"שמור\");\r\n            setPaint(p);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function getCreator() {\r\n            const creator = await paint.getCreator();\r\n            setCreator(creator);\r\n        }\r\n        async function getColorsTypes() {\r\n            const colors = await paint.getColorsTypes();\r\n            console.log(colors);\r\n            setColorTypes(colors);\r\n        }\r\n        if (paint) {\r\n            getColorsTypes();\r\n            getCreator();\r\n        }\r\n    }, [paint]);\r\n\r\n    const savePaint = () => {\r\n        if (!activeUser.savedPaints.includes(paint.id)) {\r\n            paint.setSaved();\r\n            activeUser.setSavedPaints(paint.id);\r\n        }\r\n    }\r\n\r\n    const removePaint = () => {\r\n        if (activeUser.savedPaints.includes(paint.id)) {\r\n            paint.savedPaints = paint.removeSaved();\r\n            activeUser.removeSavedPaint(paint.id);\r\n        }\r\n    }\r\n//For the modal image view and encapsulation of remove and save buttons\r\n    const saveOrRemove = () => {\r\n        if (buttonState === \"שמור\") {\r\n            savePaint();\r\n            setButtonState(\"הסר\")\r\n        } else if (buttonState === \"הסר\") {\r\n            removePaint();\r\n            setButtonState(\"שמור\");\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"p-creation-details\">\r\n            <BuyerNavBar />\r\n            {paint ?\r\n                <>\r\n                    <Row>\r\n                        <Col className=\"paint-name\" md=\"6\">\r\n                            שם היצירה : {paint.name}\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            רוחב: {paint.width}\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            אורך: {paint.height}\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            {paint.density ? <> עובי: {paint.density}</> : null}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"4\">\r\n                            {creator ? <Row className=\"details\">היוצר:  {creator.userName}</Row> : null}\r\n                            {paint.creationDate ? <Row className=\"details\">תאריך יצירה: {paint.creationDate}</Row> : null}\r\n                            <Row className=\"details\">תאריך העלאה לאתר: {paint.createdAt}</Row>\r\n\r\n                            {colorsTypes ?\r\n                                <>\r\n\r\n                                    <Row>\r\n                                        <Col md=\"3\" className=\"details\">חומרים: </Col>\r\n                                        <Col md=\"9\" className=\"color-types-carusale\">\r\n                                            <ColorTypesView types={colorsTypes} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </> : null}\r\n                            <Row className=\"details price\">מחיר: {paint.price}</Row>\r\n                            {paint.story ? <Row className=\"details\">תמה: {paint.story}</Row> : null}\r\n                            <Row className=\"buttons-row\">\r\n                                <Col md=\"6\"> {creator ? <Button size=\"md\" className=\"eng\" href={\"mailto:\" + creator.email}>Send Email</Button> : null}</Col>\r\n                                <Col md=\"6\"> {<Button size=\"md\" variant={buttonState === \"שמור\" ? \"success\" : \"danger\"} onClick={() => saveOrRemove()} >{buttonState}</Button>}</Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            {paint.additionalImg1 !== undefined || paint.additionalImg2 !== undefined ?\r\n                                <Carousel>\r\n                                    <Carousel.Item >\r\n                                        <img onClick={() => setShow(true)}\r\n                                            className=\"d-block w-100\"\r\n                                            src={paint.img}\r\n                                            alt=\"First slide\"\r\n                                        />\r\n                                    </Carousel.Item>\r\n                                    {paint.additionalImg1 !== undefined ?\r\n                                        <Carousel.Item>\r\n                                            <img onClick={() => setShow(true)}\r\n                                                className=\"d-block w-100\"\r\n                                                src={paint.additionalImg1}\r\n                                                alt=\"Second slide\"\r\n                                            />\r\n                                        </Carousel.Item> : null}\r\n                                    {paint.additionalImg2 !== undefined ?\r\n                                        <Carousel.Item>\r\n                                            <img onClick={() => setShow(true)}\r\n                                                className=\"d-block w-100\"\r\n                                                src={paint.additionalImg2}\r\n                                                alt=\"Third slide\"\r\n                                            />\r\n                                        </Carousel.Item> : null}\r\n                                </Carousel>\r\n                                :\r\n                                <Image className=\"paint\" src={paint.img} onClick={() => setShow(true)}></Image>}\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Modal\r\n                        scrollable=\"true\"\r\n                        size=\"xl\"\r\n                        show={show}\r\n                        onHide={() => setShow(false)}\r\n                        aria-labelledby=\"example-custom-modal-styling-title\">\r\n                        <Modal.Header closeButton closeLabel=\"סגור\">\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Image className=\"paint\" src={paint.img} />\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                </>\r\n                : null}\r\n\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreationDetailsPage;","import React from 'react';\r\n\r\nfunction CreatorNewPaintPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorNewPaintPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorNewPaintPage;","import React from 'react';\r\n\r\nfunction CreatorDetailsPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorDetailsPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorDetailsPage;","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport SignUpPage from './pages/SignUpPage/SignUpPage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport ShowCreatorDetailsPage from './pages/ShowCreatorDetailsPage/ShowCreatorDetailsPage';\nimport WellcomePage from './pages/WellcomePage/WellcomePage';\nimport CreatorManagePage from './pages/CreatorManagePage/CreatorManagePage';\nimport BuyerSavedPaintsPage from './pages/BuyerSavedPaintsPage/BuyerSavedPaintsPage';\nimport CreationDetailsPage from './pages/CreationDetailsPage/CreationDetailsPage';\nimport CreatorNewPaintPage from './pages/CreatorNewPaintPage/CreatorNewPaintPage';\nimport CreatorDetailsPage from './pages/CreatorDetailsPage/CreatorDetailsPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ActiveUserContext from './shared/ActiveUserContext';\nimport { useState } from 'react';\nfunction App() {\n  const [activeUser, setActiveUser] = useState();\n  const [isCreator, setIsCreator] = useState(undefined);\n  return (\n    <ActiveUserContext.Provider value={activeUser} >\n      <HashRouter>\n        <Switch>\n          {isCreator !== undefined? <Route exact path=\"/signup\" ><SignUpPage isCreator={isCreator}/></Route> : null}\n          <Route exact path=\"/\" ><WellcomePage setIsCreator={setIsCreator}/></Route>\n          <Route exact path=\"/login\" component={LoginPage}><LoginPage onLogin={user => setActiveUser(user) } /></Route>\n          <Route exact path=\"/home\" ><HomePage /></Route>\n          <Route exact path=\"/creator\"><ShowCreatorDetailsPage /></Route>\n          <Route exact path=\"/manage\"><CreatorManagePage /></Route>\n          <Route exact path=\"/saved\"><BuyerSavedPaintsPage /></Route>\n          <Route exact path=\"/creation/:index\"><CreationDetailsPage /></Route>\n          <Route exact path=\"/newpaint\"><CreatorNewPaintPage /></Route>\n          <Route exact path=\"/update-details\"><CreatorDetailsPage /></Route>\n        </Switch>\n      </HashRouter>\n    </ActiveUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'FXaD5rsyoj4aYU8D3oLjTcZjVKzlwYkRxwMm71v3', // This is your Application ID\n  'RXHI6S4G631KP66jgzwcgqqNnDQSYwScuyNXr90g' // This is your Javascript key\n);\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}