{"version":3,"sources":["shared/ActiveUserContext.jsx","components/ImgCard/ImgCard.jsx","components/BuyerNavBar/BuyerNavBar.jsx","pages/HomePage/HomePage.jsx","pages/SignUpPage/SignUpPage.jsx","models/ColorType.js","models/CreationModel.js","models/UserModel.js","pages/LoginPage/LoginPage.jsx","pages/ShowCreatorDetailsPage/ShowCreatorDetailsPage.jsx","components/MyButton/MyButton.jsx","pages/WellcomePage/WellcomePage.jsx","pages/CreatorManagePage/CreatorManagePage.jsx","pages/BuyerSavedPaintsPage/BuyerSavedPaintsPage.jsx","components/ColorTypesView/ColorTypesView.jsx","pages/CreationDetailsPage/CreationDetailsPage.jsx","pages/CreatorNewPaintPage/CreatorNewPaintPage.jsx","pages/CreatorDetailsPage/CreatorDetailsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","ImgCard","paint","index","useState","redirectTo","setRedirectTo","undefined","to","Card","className","onClick","Image","src","img","BuyerNavBar","props","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Form","Row","Control","value","filterText","onChange","e","setFilterText","target","placeholder","filterBy","as","setFilterBy","HomePage","filterdPaints","setFilterdPaint","paints","setPaints","activeUser","useContext","useEffect","a","getPaints","paintsToSet","fetchData","getFilterdPaints","paintsShowCreator","map","style","width","Img","variant","paintsShowBuyer","isCreator","columnsCountBreakPoints","350","750","900","Container","SignUpPage","ColorType","parseColor","this","get","url","name","CreationModel","result","createdAt","JSON","stringify","additionalImg1","additionalImg2","price","creationDate","height","density","story","colorsTypes","creatorId","saved","watched","Paint","Parse","Object","extend","Query","then","object","set","save","response","console","log","error","User","query","equalTo","find","parseUsers","creators","parseUser","UserModel","colorType","containedIn","values","parseColorsTypes","types","type","parsePaints","parsePaint","fName","lName","email","phone","colorTypes","trends","privateOrders","userName","site","occupation","savedPaints","watchedPaints","parseUserIds","paintsTmp","i","length","paintsTemp","concat","parsePaintRandom","parseRandom","Math","random","includes","push","paintId","contains","pwd","logIn","LoginPage","onLogin","setEmail","setPwd","showInvalidLogin","setShowInvalidLogin","preventDefault","login","Alert","onSubmit","Group","controlId","Label","Button","block","ShowCreatorDetailsPage","MyButton","text","WellcomePage","signup","setIsCreator","CreatorManagePage","BuyerSavedPaintsPage","paintsToShow","setPaintsToShow","getSavedPaints","PaintsToShow","ColorTypesView","items","Carousel","Item","alt","Caption","fade","CreationDetailsPage","useParams","setPaint","creator","setCreator","setColorTypes","getPaint","p","setWatched","setWatchedPaints","getCreator","getColorsTypes","colors","Col","md","setSaved","setSavedPaints","CreatorNewPaintPage","CreatorDetailsPage","App","setActiveUser","Provider","exact","path","component","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99092efc.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React, { useState } from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction ImgCard({paint,index}) {\r\n    const [redirectTo, setRedirectTo] = useState();\r\n    if (redirectTo !== undefined) {\r\n        return <Redirect to={'/creation/' + redirectTo}/>\r\n    }\r\n    return (\r\n        <Card className=\"img-card\" \r\n            onClick={() => setRedirectTo(index)}>\r\n            <Image src={paint.img} ></Image>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ImgCard;","import { Button } from 'bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { Form, FormControl, Nav, Navbar, Row } from 'react-bootstrap';\r\nimport './BuyerNavBar.css'\r\n\r\nfunction BuyerNavBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <Navbar className=\"buyer-navbar\" bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand className=\"eng\" href=\"/\">PaintsIL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto col-lg-6\">\r\n                    <Nav.Link href=\"#home\">עמוד הבית</Nav.Link>\r\n                    <Nav.Link href=\"#saved\">התמונות ששמרתי</Nav.Link>\r\n                </Nav>\r\n                <Form className=\"form-filter col-lg-6\">\r\n                    <Row>\r\n                        <div className=\"filter-container col-md-6 col-12\">\r\n                            <Form.Control value={props.filterText} onChange={(e) => {\r\n                                props.setFilterText(e.target.value);\r\n                            }} placeholder=\"מה לחפש?\"></Form.Control>\r\n                        </div>\r\n                        <div className=\"select-container col-md-6 col-12\">\r\n                            <Form.Control value={props.filterBy} as=\"select\" onChange={(e) => props.setFilterBy(e.target.value)}>\r\n                                <option value=\"userName\">שם האומן</option>\r\n                                <option value=\"creationName\">שם היצירה</option>\r\n                                <option value=\"size\">גודל</option>\r\n                            </Form.Control>\r\n                        </div>\r\n                    </Row>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default BuyerNavBar;","import React, { useContext, useEffect, useState } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Card, Container } from 'react-bootstrap';\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport ImgCard from '../../components/ImgCard/ImgCard';\r\nimport BuyerNavBar from '../../components/BuyerNavBar/BuyerNavBar';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n    const [filterText, setFilterText] = useState();\r\n    const [filterBy, setFilterBy] = useState(\"userName\");\r\n    const [filterdPaints, setFilterdPaint] = useState();\r\n    const [paints, setPaints] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const paintsToSet = await activeUser.getPaints();\r\n            setPaints(paintsToSet);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [activeUser])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const paintsToSet = await activeUser.getFilterdPaints(filterText, filterBy);\r\n            setFilterdPaint(paintsToSet);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [filterText, filterBy, activeUser])\r\n\r\n\r\n    const paintsShowCreator = paints ? paints.map(paint => {\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={paint.img} />\r\n            </Card>\r\n        )\r\n    }) : null;\r\n\r\n\r\n    const paintsShowBuyer = paints && !filterText ? paints.map((paint, index) => <ImgCard className=\"img-card\" key={index} paint={paint} index={paint.id} />) :\r\n        paints && filterdPaints ? filterdPaints.map((paint, index) => <ImgCard className=\"img-card\" key={index} paint={paint} index={paint.id} />) : null;\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {activeUser && activeUser.isCreator && paints ?\r\n\r\n                <ResponsiveMasonry\r\n                    columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                    <Masonry>\r\n                        {paintsShowCreator}\r\n                    </Masonry>\r\n                </ResponsiveMasonry>\r\n\r\n                : paints ?\r\n                    <Container>\r\n                        <BuyerNavBar filterText={filterText} setFilterText={setFilterText} filterBy={filterBy} setFilterBy={setFilterBy} />\r\n                        <ResponsiveMasonry\r\n                            columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                            <Masonry>\r\n                                {paintsShowBuyer}\r\n                            </Masonry>\r\n                        </ResponsiveMasonry>\r\n                    </Container> : null\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction SignUpPage(props) {\r\n    return (\r\n        <div>\r\n           <h1>In SignUpPage</h1> \r\n           {\r\n               props.isCreator === true ? <h2>is creator</h2> : <h2>is buyer</h2>\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage;","export default class ColorType{\r\n    constructor(parseColor){\r\n        this.id = parseColor.id;\r\n        this.img = parseColor.get(\"img\").url();;\r\n        this.name = parseColor.get(\"name\");\r\n    }\r\n}","import Parse from 'parse';\r\nimport ColorType from './ColorType';\r\nimport UserModel from './UserModel';\r\nexport default class CreationModel {\r\n    constructor(result) {\r\n        this.id = result.id;\r\n        this.createdAt = JSON.stringify(result.createdAt);\r\n        this.name = result.get(\"name\");\r\n        this.img = result.get(\"img\").url();\r\n        if (result.get(\"additionalImg1\")) this.additionalImg1 = result.get(\"additionalImg1\").url();\r\n        if (result.get(\"additionalImg2\")) this.additionalImg2 = result.get(\"additionalImg2\").url();\r\n        this.price = result.get(\"price\");\r\n        if (result.get(\"creationDate\") !== undefined) this.creationDate = result.get(\"creationDate\");\r\n        this.width = result.get(\"width\");\r\n        this.height = result.get(\"height\");\r\n        if (result.get(\"density\") !== undefined) this.density = result.get(\"density\");\r\n        if (result.get(\"this.story\") !== undefined) this.story = result.get(\"story\");\r\n        this.colorsTypes = result.get(\"colorsTypes\");\r\n        this.creatorId = result.get(\"creatorId\");\r\n        this.saved = result.get(\"saved\");\r\n        this.watched = result.get(\"watched\");\r\n    }\r\n\r\n    async setSaved() {\r\n        this.saved = this.saved + 1;\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.get(this.id).then((object) => {\r\n            object.set('saved', this.saved);\r\n            object.save().then((response) => {\r\n                console.log('Updated ', response);\r\n            }, (error) => {\r\n                console.error('Error while updating ', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    async setWatched() {\r\n        this.watched = this.watched + 1;\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.get(this.id).then((object) => {\r\n            object.set('watched', this.watched);\r\n            object.save().then((response) => {\r\n                console.log('Updated ', response);\r\n            }, (error) => {\r\n                console.error('Error while updating ', error);\r\n            });\r\n        });\r\n    }\r\n    static async getPaint(index){\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.equalTo(\"objectId\", index);\r\n        const parsePaints = await query.find();\r\n        const paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n        return paints[0];\r\n    }\r\n    async getCreator(){\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.equalTo(\"objectId\", this.creatorId);\r\n        const parseUsers = await query.find();\r\n        const creators = parseUsers.map(parseUser =>  new UserModel(parseUser));\r\n        console.log(creators[0]);\r\n        return creators[0];\r\n    }\r\n\r\n    async getColorsTypes(){\r\n        const colorType = Parse.Object.extend('colorType');\r\n        const query = new Parse.Query(colorType);\r\n        console.log(this.colorsTypes);\r\n        query.containedIn(\"objectId\",Object.values(this.colorsTypes));\r\n        const parseColorsTypes = await query.find();\r\n        const types = parseColorsTypes.map(type => new ColorType(type));\r\n        return types;\r\n    }\r\n\r\n}","import Parse from 'parse';\r\nimport CreationModel from './CreationModel';\r\nexport default class UserModel {\r\n    #parseUser\r\n    constructor(parseUser) {\r\n        this.id = parseUser.id;\r\n        this.fName = parseUser.get(\"fName\");\r\n        this.lName = parseUser.get(\"lName\");\r\n        this.email = parseUser.get(\"email2\");\r\n        this.phone = parseUser.get(\"phone\");\r\n        this.colorTypes = parseUser.get(\"colorsTypes\");\r\n        this.trends = parseUser.get(\"trends\");\r\n        this.privateOrders = parseUser.get(\"privateOrders\");\r\n        this.userName = parseUser.get(\"userName\");\r\n        this.site = parseUser.get(\"site\");\r\n        this.story = parseUser.get(\"story\");\r\n        this.occupation = parseUser.get(\"occupation\");\r\n        this.isCreator = parseUser.get(\"isCreator\");\r\n        this.savedPaints = parseUser.get(\"savedPaints\");\r\n        this.watchedPaints = parseUser.get(\"watchedPaints\");\r\n\r\n    }\r\n\r\n    static activeUser = null;\r\n    static paints = [];\r\n\r\n    static async login(email, pwd) {\r\n        const parseUser = await Parse.User.logIn(email, pwd);\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n        return UserModel.activeUser;\r\n    }\r\n\r\n    async getPaints(parseUserIds) {\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        console.log(parseUserIds);\r\n        if(parseUserIds){\r\n            let paintsTmp =[];\r\n            if(parseUserIds !== undefined){\r\n            for(let i=0 ;i < parseUserIds.length;i++){\r\n                console.log(parseUserIds[i]);\r\n               query.equalTo(\"creatorId\",parseUserIds[i])\r\n               const parsePaints = await query.find();\r\n               const paintsTemp = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n               paintsTmp = paintsTmp.concat(paintsTemp);\r\n            }}\r\n            return paintsTmp;\r\n        }\r\n        \r\n        if (this.isCreator) {\r\n            query.equalTo(\"creatorId\", this.id);\r\n            const parsePaints = await query.find();\r\n            this.paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n            return this.paints;\r\n        }\r\n        const parsePaints = await query.find();\r\n        console.log(parsePaints.length);\r\n\r\n        //const paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n        \r\n            const parsePaintRandom = [];\r\n            for(let i=0;(parsePaints.length >= 10 && i<10) || i<4;i++){\r\n                const parseRandom = parsePaints[parsePaints.length * Math.random() | 0];\r\n                parsePaintRandom === [] || !parsePaintRandom.includes(parseRandom)  ? parsePaintRandom.push(parseRandom) : i--;\r\n            }\r\n            UserModel.paints = parsePaintRandom.map(parsePaint => new CreationModel(parsePaint));\r\n            return UserModel.paints;\r\n    }\r\n\r\n    async getSavedPaints() {\r\n        console.log(UserModel.activeUser);\r\n        const Paint = Parse.Object.extend('Paint');\r\n        const query = new Parse.Query(Paint);\r\n        query.containedIn(\"objectId\", this.savedPaints)\r\n        const parsePaints = await query.find();\r\n        const savedPaints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n\r\n        return savedPaints;\r\n    }\r\n\r\n    async setSavedPaints(paintId){\r\n        this.savedPaints = this.savedPaints.concat(paintId);\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.get(this.id).then((object) => {\r\n            object.set('savedPaints',Object.values(this.savedPaints) );\r\n            object.save().then((response) => {\r\n              console.log('Updated ', response);\r\n            }, (error) => {\r\n              console.error('Error while updating ', error);\r\n            });\r\n          });\r\n    }\r\n    async setWatchedPaints(paintId){\r\n        this.watchedPaints = this.watchedPaints.concat(paintId);\r\n        const User = Parse.Object.extend('User');\r\n        const query = new Parse.Query(User);\r\n        query.get(this.id).then((object) => {\r\n            object.set('watchedPaints',Object.values(this.watchedPaints)); \r\n            object.save().then((response) => {\r\n              console.log('Updated ', response);\r\n            }, (error) => {\r\n              console.error('Error while updating ', error);\r\n            });\r\n          });\r\n    }\r\n    async getFilterdPaints(filterText,filterBy){\r\n        console.log(\"filterText:\", filterText, \"filterBy\", filterBy);\r\n        if(filterBy === \"creationName\"){\r\n            const Paint = Parse.Object.extend('Paint');\r\n            const query = new Parse.Query(Paint);\r\n            query.contains(\"name\", filterText);\r\n            const parsePaints = await query.find();\r\n            this.paints = parsePaints.map(parsePaint => new CreationModel(parsePaint));\r\n            return this.paints;\r\n        }\r\n        else if(filterBy === \"userName\" && filterText){\r\n            const User = Parse.Object.extend('User');\r\n            const query = new Parse.Query(User);\r\n            query.contains(\"userName\", filterText);\r\n            const parseUsers = await query.find();\r\n            const parseUserIds = parseUsers.map(parseUser => parseUser.id);\r\n            this.paints = this.getPaints(parseUserIds);\r\n            return this.paints;\r\n        }\r\n        return UserModel.paints;\r\n    }\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport UserModel from '../../models/UserModel';\r\nimport './LoginPage.css';\r\n\r\n\r\nfunction LoginPage({ onLogin}) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        // Pass the username and password to logIn function\r\n        // UserModel.login(email,pwd);\r\n        try {\r\n            const activeUser = await UserModel.login(email, pwd);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n    return (\r\n        <Container  className=\"bg-p-login\">\r\n            <div className=\"p-login col-md-10 col-lg-6\">\r\n                <h1 className=\"p-login-title\">כניסה לאתר</h1>\r\n                <p className=\"p-login-title\">או <Link to=\"/\">הרשמה לאתר</Link></p>\r\n                {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                <Form className=\"form-login\" onSubmit={login}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className=\"eng\">Email</Form.Label>\r\n                        <Form.Control className=\"eng\" type=\"email\" placeholder=\"Email\"\r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמה\"\r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button className=\"submit-btn-login\" type=\"submit\" block>\r\n                    כניסה\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nfunction ShowCreatorDetailsPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In ShowCreatorDetailsPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowCreatorDetailsPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MyButton.css';\r\n\r\nfunction MyButton(props) {\r\n    return (\r\n        <Link to={props.href}>\r\n        <button className=\"my-button\" onClick={() => props.onClick? props.onClick(props.isCreator):null}>\r\n            <span>{props.text}</span>\r\n        </button>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MyButton;","\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport MyButton from '../../components/MyButton/MyButton';\r\nimport './WellcomePage.css';\r\n\r\nfunction WellcomePage(props) {\r\n    const signup = (isCreator => props.setIsCreator(isCreator));\r\n    return (\r\n\r\n        <Container className=\"p-wellcome\">\r\n            <div className=\"p-text-content\">\r\n                <MyButton href=\"/login\" text=\"כניסה\" />\r\n                <h2>ברוכים הבאים לאתר</h2>\r\n                <h1 className=\"eng\">PaintsIL</h1>\r\n                <h2>האתר הישראלי לרכישת אומנות ישירות מהאומן, ללא דמי תיווך! </h2>\r\n                <h1>בצורה נעימה וללא שטיקים</h1>\r\n                <h4>*השירות באתר ניתן לרשומים בלבד</h4>\r\n                <h2>להרשמה עליך לבחור</h2>\r\n                <div className=\"signup-buttons\">\r\n                    <MyButton href=\"/signup\" onClick={signup} isCreator={true} text=\"אומן\" />\r\n                    <MyButton href=\"/signup\" onClick={signup} isCreator={false} text=\"קונה\" />\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WellcomePage;","import React from 'react';\r\n\r\nfunction CreatorManagePage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorManagePage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorManagePage;","import React, { useContext, useEffect, useState } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Container } from 'react-bootstrap';\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport ImgCard from '../../components/ImgCard/ImgCard';\r\nimport BuyerNavBar from '../../components/BuyerNavBar/BuyerNavBar';\r\nimport './BuyerSavedPaintsPage.css';\r\nfunction BuyerSavedPaintsPage(props) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [paintsToShow, setPaintsToShow] = useState();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const PaintsToShow = await activeUser.getSavedPaints();\r\n            setPaintsToShow(PaintsToShow);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, [])\r\n   \r\n    return (\r\n        <Container>\r\n            <BuyerNavBar />\r\n            <ResponsiveMasonry\r\n                columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n                <Masonry>\r\n                    {paintsToShow? paintsToShow.map((paint, index) => <ImgCard key={index} paint={paint} index={paint.id} />) : null}\r\n                </Masonry>\r\n            </ResponsiveMasonry>\r\n        </Container>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BuyerSavedPaintsPage;","import { Carousel } from 'react-bootstrap';\r\n\r\nfunction ColorTypesView(props) {\r\n    \r\n    const items = props.types.map((colorType,index) => {\r\n        return(\r\n        <Carousel.Item key= {index}>\r\n                    <img \r\n                        className=\"d-block w-100\"\r\n                        src={colorType.img}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h4>{colorType.name}</h4>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <Carousel fade>\r\n                {items ?  items : null}\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ColorTypesView;","import { Button } from 'bootstrap';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Image, Nav, Navbar, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport ColorTypesView from '../../components/ColorTypesView/ColorTypesView';\r\nimport CreationModel from '../../models/CreationModel';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './CreationDetailsPage.css';\r\n\r\nfunction CreationDetailsPage(props) {\r\n    const { index } = useParams();\r\n    const [paint, setPaint] = useState();\r\n    const [creator, setCreator] = useState();\r\n    const [colorsTypes, setColorTypes] = useState();\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const p = await CreationModel.getPaint(index);\r\n            p.setWatched();\r\n            if(!activeUser.watchedPaints.includes(p.id)) activeUser.setWatchedPaints(p.id);\r\n            setPaint(p);\r\n        }\r\n        if (activeUser) {\r\n            fetchData();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function getCreator() {\r\n            const creator = await paint.getCreator();\r\n            setCreator(creator);\r\n        }\r\n        async function getColorsTypes() {\r\n            const colors = await paint.getColorsTypes();\r\n            console.log(colors);\r\n            setColorTypes(colors);\r\n        }\r\n        if (paint) {\r\n            getColorsTypes();\r\n            getCreator();\r\n        }\r\n    }, [paint]);\r\n\r\n    const savePaint = () => {\r\n        if(!activeUser.savedPaints.includes(paint.id)){\r\n        paint.setSaved();\r\n        activeUser.setSavedPaints(paint.id);\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"p-creation-details\">\r\n            <Navbar className=\"buyer-navbar\" bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">PaintsIL</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto col-lg-6\">\r\n                        <Nav.Link href=\"#home\">עמוד הבית</Nav.Link>\r\n                        <Nav.Link href=\"#saved\">התמונות ששמרתי</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            {paint ?\r\n                <>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <h1>שם היצירה : {paint.name}</h1>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <h3>רוחב: {paint.width}</h3>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <h3>אורך: {paint.height}</h3>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            {paint.density ? <h3>עובי: {paint.density}</h3> : null}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            {creator ? <Row>היוצר:  {creator.userName}</Row> : null}\r\n                            {paint.creationDate ? <Row>תאריך יצירה: {paint.creationDate}</Row> : null}\r\n                            <Row>תאריך העלאה לאתר: {paint.createdAt}</Row>\r\n\r\n                            {colorsTypes ? \r\n                            <>\r\n                                <Row>חומרים: </Row>\r\n                                <Row>\r\n                                    <ColorTypesView types={colorsTypes} />\r\n                                </Row>\r\n                            </> : null}\r\n                            <Row>מחיר: {paint.price}</Row>\r\n                            {paint.story ? <Row>תמה: {paint.story}</Row> : null}\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Image src={paint.img}></Image>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {/* <Button className=\"en\">SMS</Button> */}\r\n                        { creator?<a className=\"en\" href={\"mailto:\" + creator.email}>Send Email</a> : null}\r\n                        {!activeUser.savedPaints.includes(paint.id) ? <button onClick={()=>savePaint()} >שמור</button> : null}\r\n                    </Row>\r\n\r\n                </>\r\n                : null}\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreationDetailsPage;","import React from 'react';\r\n\r\nfunction CreatorNewPaintPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorNewPaintPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorNewPaintPage;","import React from 'react';\r\n\r\nfunction CreatorDetailsPage(props) {\r\n    return (\r\n        <div>\r\n            <h1>In CreatorDetailsPage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatorDetailsPage;","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport SignUpPage from './pages/SignUpPage/SignUpPage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport ShowCreatorDetailsPage from './pages/ShowCreatorDetailsPage/ShowCreatorDetailsPage';\nimport WellcomePage from './pages/WellcomePage/WellcomePage';\nimport CreatorManagePage from './pages/CreatorManagePage/CreatorManagePage';\nimport BuyerSavedPaintsPage from './pages/BuyerSavedPaintsPage/BuyerSavedPaintsPage';\nimport CreationDetailsPage from './pages/CreationDetailsPage/CreationDetailsPage';\nimport CreatorNewPaintPage from './pages/CreatorNewPaintPage/CreatorNewPaintPage';\nimport CreatorDetailsPage from './pages/CreatorDetailsPage/CreatorDetailsPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ActiveUserContext from './shared/ActiveUserContext';\nimport { useState } from 'react';\nfunction App() {\n  const [activeUser, setActiveUser] = useState();\n  const [isCreator, setIsCreator] = useState(undefined);\n  return (\n    <ActiveUserContext.Provider value={activeUser} >\n      <HashRouter>\n        <Switch>\n          {isCreator !== undefined? <Route exact path=\"/signup\" ><SignUpPage isCreator={isCreator}/></Route> : null}\n          <Route exact path=\"/\" ><WellcomePage setIsCreator={setIsCreator}/></Route>\n          <Route exact path=\"/login\" component={LoginPage}><LoginPage onLogin={user => setActiveUser(user) } /></Route>\n          <Route exact path=\"/home\" ><HomePage /></Route>\n          <Route exact path=\"/creator\"><ShowCreatorDetailsPage /></Route>\n          <Route exact path=\"/manage\"><CreatorManagePage /></Route>\n          <Route exact path=\"/saved\"><BuyerSavedPaintsPage /></Route>\n          <Route exact path=\"/creation/:index\"><CreationDetailsPage /></Route>\n          <Route exact path=\"/newpaint\"><CreatorNewPaintPage /></Route>\n          <Route exact path=\"/update-details\"><CreatorDetailsPage /></Route>\n        </Switch>\n      </HashRouter>\n    </ActiveUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'FXaD5rsyoj4aYU8D3oLjTcZjVKzlwYkRxwMm71v3', // This is your Application ID\n  'RXHI6S4G631KP66jgzwcgqqNnDQSYwScuyNXr90g' // This is your Javascript key\n);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}